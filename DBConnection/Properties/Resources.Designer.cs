//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DBConnection.Properties {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DBConnection.Properties.Resources", typeof(Resources).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DECLARE @V_MainName SYSNAME = &apos;{0}&apos;;
        ///DECLARE @V_Cmd NVARCHAR(max);
        ///SET ANSI_NULLS ON
        ///SET QUOTED_IDENTIFIER ON
        ///DECLARE @V_SchemaName SYSNAME = &apos;{1}&apos;;
        ///
        ///SET @V_Cmd = &apos;
        ///	GRANT ALTER ON SCHEMA::&apos; + quotename( @V_SchemaName ) + &apos; TO &apos; + quotename(@V_MainName)  + &apos;;
        ///	GRANT SELECT ON SCHEMA::&apos; + quotename( @V_SchemaName ) + &apos; TO &apos; + quotename(@V_MainName)  + &apos;;
        ///&apos;
        ///EXEC( @V_Cmd );.
        /// </summary>
        public static string AdminAddObservedShema {
            get {
                return ResourceManager.GetString("AdminAddObservedShema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DECLARE @V_MainName SYSNAME = &apos;{0}&apos;;
        ///DECLARE @V_Cmd NVARCHAR(max);
        ///SET ANSI_NULLS ON
        ///SET QUOTED_IDENTIFIER ON
        ///
        ///-- Create or ReCreate DependencyDB login
        ///BEGIN TRANSACTION
        ///	IF EXISTS (
        ///		SELECT name 
        ///		FROM master.sys.server_principals
        ///		WHERE name = @V_MainName)
        ///		BEGIN
        ///			SET @V_Cmd = &apos;
        ///				DROP LOGIN &apos; + quotename(@V_MainName) + &apos;;
        ///			&apos;
        ///			EXEC ( @V_Cmd );
        ///		END
        ///	SET @V_Cmd = &apos;
        ///		CREATE LOGIN &apos; + quotename(@V_MainName) + &apos;
        ///			WITH PASSWORD = &apos;&apos;{1}&apos;&apos;, 
        ///			CHECK_EXPIRATION = OFF, 
        ///			CHE [rest of string was truncated]&quot;;.
        /// </summary>
        public static string AdminInstall {
            get {
                return ResourceManager.GetString("AdminInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DECLARE @V_MainName SYSNAME = &apos;{0}&apos;;
        ///DECLARE @V_Cmd NVARCHAR(max);
        ///SET ANSI_NULLS ON
        ///SET QUOTED_IDENTIFIER ON
        ///DECLARE @V_SchemaName SYSNAME = &apos;{1}&apos;;
        ///
        ///SET @V_Cmd = &apos;
        ///	REVOKE ALTER ON SCHEMA::&apos; + quotename( @V_SchemaName ) + &apos; TO &apos; + quotename(@V_MainName)  + &apos;;
        ///	REVOKE SELECT ON SCHEMA::&apos; + quotename( @V_SchemaName ) + &apos; TO &apos; + quotename(@V_MainName)  + &apos;;
        ///&apos;
        ///EXEC( @V_Cmd );.
        /// </summary>
        public static string AdminRemoveObservedShema {
            get {
                return ResourceManager.GetString("AdminRemoveObservedShema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DECLARE @V_MainName SYSNAME = &apos;{0}&apos;;
        ///DECLARE @V_Cmd NVARCHAR(max);
        ///SET ANSI_NULLS ON
        ///SET QUOTED_IDENTIFIER ON
        ///
        ///-- Remove Table
        ///IF EXISTS(
        ///	SELECT SysTables.name
        ///		FROM sys.tables AS SysTables
        ///		INNER JOIN sys.schemas AS SysSchemas
        ///			ON SysSchemas.schema_id = SysTables.schema_id
        ///		WHERE SysTables.name = &apos;SubscribersTable&apos;
        ///			AND SysSchemas.name = @V_MainName)
        ///	BEGIN
        ///		SET @V_Cmd = &apos;
        ///			DROP TABLE &apos; + quotename(@V_MainName) + &apos;.[SubscribersTable] ;
        ///		&apos;
        ///		EXEC ( @V_Cmd );
        ///	END
        ///
        ///-- Remove S [rest of string was truncated]&quot;;.
        /// </summary>
        public static string AdminUnInstall {
            get {
                return ResourceManager.GetString("AdminUnInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE PROCEDURE [{0}].[InstallSubscription]
        ///	@V_SubscriberString NVARCHAR(200),
        ///	@V_SubscriptionHash INT,
        ///	@V_ProcedureSchemaName SYSNAME,
        ///	@V_ProcedureName SYSNAME,
        ///	@TBL_ProcedureParameters dbo.TYPE_ParametersType READONLY,
        ///	@V_ValidFor INT
        ///AS 
        ///--DECLARE
        ///--	@V_SubscriberString NVARCHAR(200) = &apos;TestSubscriberString&apos;,
        ///--	@V_SubscriptionHash INT = &apos;1234564&apos;,
        ///--	@V_ProcedureSchemaName SYSNAME = &apos;dbo&apos;,
        ///--	@V_ProcedureName SYSNAME = &apos;TestProcedure&apos;,
        ///--	@TBL_ProcedureParameters dbo.TYPE_ParametersT [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DependencyDB_InstallSubscription {
            get {
                return ResourceManager.GetString("DependencyDB_InstallSubscription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE PROCEDURE [{0}].[ReceiveSubscription]
        ///	@V_ReceiveTimeout int
        ///AS
        ///BEGIN
        ///
        ///	DECLARE @V_MainName SYSNAME = &apos;{0}&apos; ;
        ///	DECLARE @V_Cmd NVARCHAR(max);
        ///
        ///	DECLARE @V_Queue SYSNAME ;
        ///	SET @V_Queue =  &apos;Queue_&apos; + @V_MainName ;
        ///
        ///	-- Start Listening
        ///	SET @V_Cmd = &apos;
        ///		DECLARE @V_ConvHandle UNIQUEIDENTIFIER
        ///        DECLARE @V_Message VARBINARY(MAX) 
        ///		DECLARE @V_MessageTypeId int = 2 -- end conversation msg
        ///		DECLARE @V_ConnectionState varchar(2)
        ///		DECLARE @V_IsFound bit
        ///		WHILE @messageTypeId = 2
        ///		 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DependencyDB_ReceiveSubscription {
            get {
                return ResourceManager.GetString("DependencyDB_ReceiveSubscription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///SET ANSI_NULLS ON
        ///GO
        ///SET QUOTED_IDENTIFIER ON
        ///GO
        ///
        ///ALTER PROCEDURE [DependencyDB].[UninstallAll]
        ///	@AppName NVARCHAR(110) -- max object name length is 128 ex. &apos;MemSourceAPI&apos;
        ///AS
        ///BEGIN
        ///
        ///	-- this is run only on start of application
        ///	DECLARE @ListenerQueue NVARCHAR(128)
        ///	SET @ListenerQueue = N&apos;ListenerQueue_&apos; + @ListenerAppName
        ///	DECLARE @ListenerService NVARCHAR(128)
        ///	SET @ListenerService = N&apos;ListenerService_&apos; + @ListenerAppName
        ///	
        ///	DECLARE @cmd NVARCHAR(MAX)
        ///	-- drop triggers
        ///	DECLARE @triger  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DependencyDB_UninstallAll {
            get {
                return ResourceManager.GetString("DependencyDB_UninstallAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE PROCEDURE [{0}].[UninstallSubscription]
        ///	@V_SubscriberString NVARCHAR(200) = null,
        ///	@V_SubscriptionHash INT = null,
        ///	@V_ProcedureSchemaName SYSNAME = null,
        ///	@V_ProcedureName SYSNAME = null,
        ///	@TBL_ProcedureParameters dbo.TYPE_ParametersType READONLY
        ///AS
        ///BEGIN
        ///
        ///	DECLARE @V_MainName SYSNAME = &apos;{0}&apos; ;
        ///	DECLARE @V_Cmd NVARCHAR(max);
        ///
        ///	DECLARE @V_Queue SYSNAME ;
        ///	SET @V_Queue =  &apos;Queue_&apos; + @V_MainName ;
        ///
        ///	DECLARE @V_Service SYSNAME ;
        ///	SET @V_Service = &apos;Service_&apos; + @V_MainName ;
        ///
        ///	DECLARE @ [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DependencyDB_UninstallSubscription {
            get {
                return ResourceManager.GetString("DependencyDB_UninstallSubscription", resourceCulture);
            }
        }
    }
}
